> 분기 작업 branching : 가지가 뻗어 나가듯이 배치 조합을 열거하는 방법
> 한정 작업 bounding : 필요하지 않은 분기를 없애서 불필요한 조합을 열거하지 않는 방법
> 분기 한정법 branching and bounding method : 분기 작업과 한정 작업을 조합하여 문제를 풀이하는 방법

# 5-9
# 8퀸 문제 알고리즘 구현하기

pos = [0] * 8
flag_a = [False] * 8
flag_b = [False] * 15
flag_c = [False] * 15

def put() -> None:
	for j in range(8):
		for i in range(8):
			print('o' if pos[i] == j else 'x', end='')
		print()
	print()
	
def set(i: int) -> None:
	for j in range(8):
		if(		not flag_a[j]
			and not flag_b[i + j]
			and not flag_c[i - j + 7]):
			pos[i] = j
			if i == 7:
				put()
			else:
				flag_a[j] = flag_b[i + j] = flag_c[i - j + 7] = True
				set(i + 1)
				flag_a[j] =flag_b[i + j] =flag_c[i- j + 7] =False

set(0)


